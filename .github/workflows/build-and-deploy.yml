name: CI
on:
  push:
    tags: '*'
    branches-ignore:
      - 'autodelivery**'
      - 'bump-**'
      - 'renovate/**'
    paths-ignore:
      - 'CHANGELOG.md'
      - 'renovate.json'
      - '.gitignore'
  pull_request:
  workflow_dispatch:

jobs:
  # Runs all tests
  build:
    strategy:
      matrix:
        os: [ windows, macos, ubuntu ]
    runs-on: ${{ matrix.os }}-latest
    timeout-minutes: 120
    concurrency:
      group: ${{ github.workflow }}-build-${{ matrix.os }}-${{ github.event.number || github.ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: danysk/action-checkout@0.2.1
      - uses: DanySK/build-check-deploy-gradle-action@1.2.6
        with:
          build-command: true
          check-command: |
            ./gradlew check --parallel || ./gradlew check --parallel
          clean-command: |
            ./gradlew clean --parallel
          should-run-codecov: ${{ contains('Linux', runner.os) }}
          should-deploy: false
  # Builds all shadow jars and runs them
  test-shadowjar:
    strategy:
      matrix:
        os: [ windows, macos, ubuntu ]
    runs-on: ${{ matrix.os }}-latest
    timeout-minutes: 60
    concurrency:
      group: ${{ github.workflow }}-test-shadowjar-${{ matrix.os }}-${{ github.event.number || github.ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: danysk/action-checkout@0.2.1
      - uses: DanySK/build-check-deploy-gradle-action@1.2.6
        with:
          build-command: |
            ./gradlew shadowJar --parallel || ./gradlew shadowJar --parallel
          check-command: true
          java-version: 11
          should-run-codecov: false
          should-deploy: false
          should-validate-wrapper: false
  # Performs a dry-deployment if credentials are available
  test-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    if: contains(github.repository, 'AlchemistSimulator/Alchemist') && contains('push workflow_dispatch', github.event_name)
    concurrency:
      group: ${{ github.workflow }}-test-deploy-${{ github.event.number || github.ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: danysk/action-checkout@0.2.1
      - uses: DanySK/build-check-deploy-gradle-action@1.2.6
        with:
          build-command: true
          check-command: true
          deploy-command: ./gradlew closeKotlinMavenOnMavenCentralNexus --parallel
          java-version: 11
          should-run-codecov: false
          should-deploy: true
          should-validate-wrapper: false
          maven-central-password: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          signing-key: ${{ secrets.SIGNING_KEY }}
          signing-password: ${{ secrets.SIGNING_PASSWORD }}
  # Builds the website and verifies link sanity
  build-website:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    concurrency:
      group: ${{ github.workflow }}-build-website-${{ github.event.number || github.ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: danysk/action-checkout@0.2.1
      - uses: DanySK/build-check-deploy-gradle-action@1.2.6
        with:
          build-command: |
            ./gradlew hugoBuild --parallel || ./gradlew hugoBuild --parallel || ./gradlew hugoBuild --parallel
          check-command: |
            # Temporarily disable checks on kdoc/javadoc: too many bugs in Dokka.
            # See:
            # https://github.com/Kotlin/dokka/issues/2320
            # https://github.com/Kotlin/dokka/issues/2321
            # https://github.com/Kotlin/dokka/issues/2322
            # https://github.com/Kotlin/dokka/issues/2323
            # Once everything gets fixed, lychee could simply run on '/lychee/**/*.html'
            FILES="$(find build/website/ -name '*.html' | grep -v /kdoc/ | grep -v /javadoc/ | sed -e 's#^build##')"
            docker run --rm -v "$(pwd)/build/website:/website" -e GITHUB_TOKEN lycheeverse/lychee $(echo "$FILES") --exclude-file /website/lycheeignore -m 100 --accept 429
          should-run-codecov: false
          should-deploy: false
          should-validate-wrapper: false
          github-token: ${{ secrets.DEPLOYMENT_TOKEN }}
      - name: Tar files
        run: tar -cvf website.tar build/website
      - name: Upload website
        uses: actions/upload-artifact@v3.0.0
        with:
          name: website
          path: website.tar
  # Performs a release if needed
  release:
    concurrency:
      # Only one release job at a time. Strictly sequential.
      group: release
    needs:
      - build
      - build-website
      - test-deploy
      - test-shadowjar
    runs-on: ubuntu-latest
    if: >-
      contains('push workflow_dispatch', github.event_name)
      && contains(github.repository, 'AlchemistSimulator/Alchemist')
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.0
        with:
          submodules: recursive
          token: ${{ secrets.DEPLOYMENT_TOKEN }}
      - name: Checkout the docs
        if: contains(github.repository, 'AlchemistSimulator/Alchemist')
        uses: actions/checkout@v3.0.0
        with:
          path: website
          fetch-depth: 0
          persist-credentials: true
          repository: AlchemistSimulator/alchemistsimulator.github.io
          token: ${{ secrets.DEPLOYMENT_TOKEN }}
      - name: Download website artifact
        uses: actions/download-artifact@v3.0.0
        with:
          name: website
      - uses: DanySK/build-check-deploy-gradle-action@1.2.6
        with:
          java-version: 11
          build-command: |
            ls -ahl
            echo Copying the new website
            tar -xf website.tar
            echo Copying git information
            mv website/.git build/website/.git
            # git -C build/website/ status
            echo Removing old website
            rm -rf website
            echo Adding changes to the stage
            git -C build/website/ add .
            # git -C build/website/ status
          check-command: true
          deploy-command: |
            npm install
            npx semantic-release
          should-run-codecov: false
          should-deploy: true
          should-validate-wrapper: false
          github-token: ${{ secrets.DEPLOYMENT_TOKEN }}
          maven-central-password: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          signing-key: ${{ secrets.SIGNING_KEY }}
          signing-password: ${{ secrets.SIGNING_PASSWORD }}
