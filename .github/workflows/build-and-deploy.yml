name: CI
on:
  push:
    tags: '*'
    branches-ignore:
      - 'autodelivery**'
      - 'bump-**'
      - 'renovate/**'
    paths-ignore:
      - 'CHANGELOG.md'
      - 'renovate.json'
  pull_request:
  workflow_dispatch:

jobs:
  Build:
    strategy:
      matrix:
        os: [ windows, macos, ubuntu ]
    runs-on: ${{ matrix.os }}-latest
    env:
      TERM: dumb
    steps:
      - name: Checkout
        uses: danysk/action-checkout@0.1.0
      - name: Get branch name
        id: branch
        uses: tj-actions/branch-names@v5
      - uses: DanySK/build-check-deploy-gradle-action@1.0.4
        with:
          build-command: |
            ./gradlew assemble shadowJar --parallel
          check-command: |
            ./gradlew check --parallel || ./gradlew check --parallel
          clean-command: |
            ./gradlew clean --parallel
          deploy-command: |
            ./gradlew signKotlinMavenPublication --parallel
            ./gradlew closeKotlinMavenOnMavenCentralNexus
          should-run-codecov: ${{ contains('Linux', runner.os) }}
          should-deploy: >-
            ${{ 
              contains('Linux', runner.os)
              && contains(github.repository, 'AlchemistSimulator/Alchemist')
              && contains('push workflow_dispatch', github.event_name)
              && (
                contains('master develop feature/try-ci-clean', steps.branch.outputs.current_branch)
                || steps.branch.outputs.is_tag
              )
            }}
          maven-central-password: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          signing-key: ${{ secrets.SIGNING_KEY }}
          signing-password: ${{ secrets.SIGNING_PASSWORD }}
  Release:
    needs:
      - Build
    runs-on: ubuntu-latest
    if: >-
      contains('push workflow_dispatch', github.event_name)
      && contains(github.repository, 'AlchemistSimulator/Alchemist')
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0
      - uses: DanySK/build-check-deploy-gradle-action@1.0.4
        with:
          build-command: true
          check-command: true
          deploy-command: |
            npm install
            npx semantic-release
          should-run-codecov: false
          should-deploy: true
          github-token: ${{ github.token }}
          maven-central-password: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          signing-key: ${{ secrets.SIGNING_KEY }}
          signing-password: ${{ secrets.SIGNING_PASSWORD }}
