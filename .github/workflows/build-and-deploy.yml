name: CI
on:
  push:
    tags: '*'
    branches-ignore:
      - 'autodelivery**'
      - 'bump-**'
      - 'renovate/**'
    paths-ignore:
      - 'CHANGELOG.md'
      - 'renovate.json'
  pull_request:
  workflow_dispatch:

jobs:
  build-and-check:
    uses: DanySK/workflows/.github/workflows/build-and-deploy-gradle-project.yml@0.1.4-dev1
    with:
      build-command: |
        ./gradlew assemble shadowJar --parallel
      deploy-repo: 'AlchemistSimulator/Alchemist'
      deploy-command: |
        ./gradlew signKotlinMavenPublication --parallel
        ./gradlew publishKotlinMavenPublicationToMavenCentralRepository
        ./gradlew publishKotlinMavenPublicationToGithubRepository --continue || true
        ./gradlew clean
    secrets:
      github-token: ${{ secrets.GITHUB_TOKEN }}
      maven-central-password: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
      signing-key: ${{ secrets.SIGNING_KEY }}
      signing-password: ${{ secrets.SIGNING_PASSWORD }}
  documentation:
    runs-on: ubuntu-latest
    steps:
      - uses: danysk/action-checkout@0.1.0
      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'
      - name: Build website
        run: ./gradlew orchidBuild --parallel --scan
      - name: Decide whether should deploy
        id: should-deploy
        run: |
          SHOULD_DEPLOY=${{ contains(github.repository, 'AlchemistSimulator/Alchemist') && (contains(github.event_name, 'push') || contains(github.event_name, 'workflow_dispatch')) }}
          echo "::set-output name=deploy::$SHOULD_DEPLOY"
      - name: Deploy website
        if: contains(steps.should-deploy.outputs.deploy, 'true')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          githubToken: ${{ secrets.AUTOMERGE_TOKEN }}
        run: |
          COMMAND='./gradlew orchidDeploy --parallel'
          $COMMAND || sleep 10 && $COMMAND || sleep 10 && $COMMAND
      - name: Get branch name
        id: branch-name
        if: contains(steps.should-deploy.outputs.deploy, 'true')
        uses: tj-actions/branch-names@v5
      - name: Prepare the surge.sh deployment
        id: prepare-surge
        if: contains(steps.should-deploy.outputs.deploy, 'true')
        run: |
          ./gradlew dokkaJavadocCollector --parallel
          if [[ ${{ !(steps.branch-name.is_tag || steps.branch-name.is_default) }} ]]; then
            echo 'detected unstable (non-tag) version on ${{ github.ref }}'
            STABILITY_MARKER='unstable-'
          fi
          echo "::set-output name=domain::alchemist-${STABILITY_MARKER}doc.surge.sh"
      - name: Deploy to surge.sh
        if: contains(steps.should-deploy.outputs.deploy, 'true')
        uses: dswistowski/surge-sh-action@v1
        with:
          domain: '${{ steps.prepare-surge.outputs.domain }}'
          project: build/docs/orchid/javadoc
          login: ${{ secrets.SURGE_LOGIN }}
          token: ${{ secrets.SURGE_TOKEN }}
