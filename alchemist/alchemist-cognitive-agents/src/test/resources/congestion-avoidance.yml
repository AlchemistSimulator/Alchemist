incarnation: protelis

environment:
  type: ImageEnvironment
  parameters: [images/congestion-avoidance.png, 0.1]

positions:
  type: EuclideanPosition2D

network-model:
  type: NoLinks

seeds:
  scenario: 0
  simulation: 2

variables:
  envGraph: &envGraph
    formula: |
      import it.unibo.alchemist.model.implementations.positions.Euclidean2DPosition
      it.unibo.alchemist.test.congestionAvoidanceEnvGraph(
        0.1,
        mutableListOf(Euclidean2DPosition(12.0, 60.0))
      )
    language: kotlin

reactions: &behavior
  - time-distribution:
      type: DiracComb
      parameters: [1.0]
    type: OrientingBehavior2D
    parameters: [*envGraph]

displacements:
  - in:
      type: Point
      parameters: [70, 50]
    nodes:
      type: OrientingHomogeneousPedestrian2D
      parameters: [1.0, *envGraph]
    programs:
      - *behavior
  - in:
      type: Grid
      parameters: [27, 52, 56, 58, 0.5, 0.5, 0.3, 0.3]
    nodes:
      type: HomogeneousPedestrian2D
  - in:
      type: Grid
      parameters: [30, 40, 50, 45, 0.5, 0.5, 0.3, 0.3]
    nodes:
      type: HomogeneousPedestrian2D