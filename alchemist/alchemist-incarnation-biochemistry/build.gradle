apply plugin: 'antlr'

dependencies {
    implementation (
        project(':alchemist-implementationbase'),
        "com.google.guava:guava:$guavaVersion",
        "net.sf.trove4j:trove4j:$troveVersion",
        "org.danilopianini:boilerplate:$boilerplateVersion",
        "org.danilopianini:jirf:${jirfVersion}"
    )
    testImplementation(
        project(':alchemist-engine'),
        project(':alchemist-loading')
    )
    antlr "org.antlr:antlr4:$antlr4Version"
    runtimeOnly "org.antlr:antlr4-runtime:$antlr4Version"
}

configurations {
    all {
        if(!it.name.contains('antlr')) {
            exclude group: 'org.antlr', module: 'antlr-runtime'
        }
    }
}

generateGrammarSource {
    arguments += ["-visitor", "-package", "it.unibo.alchemist.biochemistrydsl", "-long-messages"]
}

compileKotlin.dependsOn("generateGrammarSource")

checkstyle {
    sourceSets = [project.sourceSets.main, project.sourceSets.test]
}

pmd {
    sourceSets = [project.sourceSets.main, project.sourceSets.test]
}

findbugs {
    sourceSets = [project.sourceSets.main, project.sourceSets.test]
}
