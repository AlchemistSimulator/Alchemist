/*
 * Copyright (C) 2010-2019, Danilo Pianini and contributors listed in the main project's alchemist/build.gradle file.
 *
 * This file is part of Alchemist, and is distributed under the terms of the
 * GNU General Public License, with a linking exception,
 * as described in the file LICENSE in the Alchemist distribution's top directory.
 */

apply plugin: 'antlr'

test {
    useJUnitPlatform()
}

dependencies {
    antlr("org.antlr:antlr4:$antlr4Version")
    implementation(project(':alchemist-implementationbase'))
    implementation("com.google.guava:guava:$guavaVersion")
    implementation("net.sf.trove4j:trove4j:$troveVersion")
    implementation("org.danilopianini:boilerplate:$boilerplateVersion")
    implementation("org.danilopianini:jirf:${jirfVersion}")
    testImplementation(project(':alchemist-engine'))
    testImplementation(project(':alchemist-loading'))
    testImplementation(project(':alchemist-time'))
    testImplementation("io.kotlintest:kotlintest-runner-junit5:$kotlinTestVersion")
    runtimeOnly("org.antlr:antlr4-runtime:$antlr4Version")
}

configurations {
    all {
        if(!it.name.contains('antlr')) {
            exclude group: 'org.antlr', module: 'antlr-runtime'
        }
    }
}

generateGrammarSource {
    arguments += ["-visitor", "-package", "it.unibo.alchemist.biochemistrydsl", "-long-messages"]
}

compileKotlin.dependsOn("generateGrammarSource")

checkstyle {
    sourceSets = [project.sourceSets.main, project.sourceSets.test]
}

pmd {
    sourceSets = [project.sourceSets.main, project.sourceSets.test]
}

findbugs {
    sourceSets = [project.sourceSets.main, project.sourceSets.test]
}
