apply plugin: 'antlr'

sourceSets {
    antlr
}

dependencies {
    compile (
        project(':alchemist-maps'),
        "com.google.guava:guava:$guavaVersion",
        "org.danilopianini:jirf:${jirfVersion}",
        project.sourceSets.antlr.output
    )
    testCompile(
        project(':alchemist-loading'),
        project(':alchemist-engine')
    )
    antlr "org.antlr:antlr4:$antlr4Version"
    antlrCompile "org.antlr:antlr4:$antlr4Version"
}

sourcesJar {
    from sourceSets.antlr.allSource
}

generateGrammarSource {
    arguments += ["-visitor", "-package", "it.unibo.alchemist.biochemistrydsl"]
    def target = new File('src/antlr/java/')
    if ((target.exists() && target.isDirectory()) || target.mkdirs()) {
        outputDirectory = target
    } else {
        throw new IllegalStateException("$target is not an existing directory and could not be created as such.")
    }
}

compileAntlrJava.dependsOn('generateGrammarSource')
compileJava.dependsOn('compileAntlrJava')

checkstyle {
    sourceSets = [project.sourceSets.main, project.sourceSets.test]
}

pmd {
    sourceSets = [project.sourceSets.main, project.sourceSets.test]
}

findbugs {
    sourceSets = [project.sourceSets.main, project.sourceSets.test]
}