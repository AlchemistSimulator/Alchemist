apply plugin: 'antlr'

sourceSets {
    main {
        java {
            srcDirs 'src/antlr/java/'
        }
    }
}

dependencies {
    implementation (
        project(':alchemist-maps'),
        "com.google.guava:guava:$guavaVersion",
        "org.danilopianini:jirf:${jirfVersion}"//,
    )
    testCompile(
        project(':alchemist-loading'),
        project(':alchemist-engine')
    )
    compileOnly "org.antlr:antlr4:$antlr4Version"
    runtimeOnly "org.antlr:antlr4-runtime:$antlr4Version"
    testCompileOnly "org.antlr:antlr4-runtime:$antlr4Version"
}

generateGrammarSource {
    arguments += ["-visitor", "-package", "it.unibo.alchemist.biochemistrydsl"]
    def target = new File('src/antlr/java/')
    if ((target.exists() && target.isDirectory()) || target.mkdirs()) {
        outputDirectory = target
    } else {
        throw new IllegalStateException("$target is not an existing directory and could not be created as such.")
    }
}

compileJava.dependsOn('generateGrammarSource')

checkstyle {
    sourceSets = [project.sourceSets.main, project.sourceSets.test]
}

pmd {
    sourceSets = [project.sourceSets.main, project.sourceSets.test]
}

findbugs {
    sourceSets = [project.sourceSets.main, project.sourceSets.test]
}
