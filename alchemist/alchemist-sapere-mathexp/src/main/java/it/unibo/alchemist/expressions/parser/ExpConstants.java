/*******************************************************************************
 * Copyright (C) 2010-2018, Danilo Pianini and contributors listed in the main
 * project's alchemist/build.gradle file.
 * 
 * This file is part of Alchemist, and is distributed under the terms of the
 * GNU General Public License, with a linking exception, as described in the file
 * LICENSE in the Alchemist distribution's top directory.
 ******************************************************************************/

/* Generated By:JavaCC: Do not edit this line. ExpConstants.java */
package it.unibo.alchemist.expressions.parser;

import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;

//CHECKSTYLE:OFF


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
@SuppressFBWarnings
@SuppressWarnings("PMD")
public interface ExpConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int RETURN = 6;
  /** RegularExpression Id. */
  int MIN = 7;
  /** RegularExpression Id. */
  int MAX = 8;
  /** RegularExpression Id. */
  int ADD = 9;
  /** RegularExpression Id. */
  int DEL = 10;
  /** RegularExpression Id. */
  int DEF = 11;
  /** RegularExpression Id. */
  int COMP = 12;
  /** RegularExpression Id. */
  int LISTCOMP = 13;
  /** RegularExpression Id. */
  int UNARYLISTCOMP = 14;
  /** RegularExpression Id. */
  int NUM = 15;
  /** RegularExpression Id. */
  int VAR = 16;
  /** RegularExpression Id. */
  int LIT = 17;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "\"return\"",
    "\"min\"",
    "\"max\"",
    "\"add\"",
    "\"del\"",
    "\"def\"",
    "<COMP>",
    "<LISTCOMP>",
    "<UNARYLISTCOMP>",
    "<NUM>",
    "<VAR>",
    "<LIT>",
    "\":\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"(\"",
    "\")\"",
    "\"|\"",
  };

}
