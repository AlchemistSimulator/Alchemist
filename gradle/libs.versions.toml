[versions]
androidx-lifecycle = "2.9.4"
antlr4 = "4.13.2"
apollo ="4.0.0-beta.7"
arrow = "2.1.2"
compose-multiplatform = "1.9.0"
dokka = "2.0.0"
graphql = "9.0.0-alpha.8"
graphhopper = "10.2"
graphstream = "2.0"
junit = "6.0.0"
konf = "1.1.2"
kotest = "6.0.3"
kotlin = "2.2.20"
kotlinx-coroutines = "1.10.2"
ktor = "3.3.0"
mockito = "5.20.0"
protelis = "18.4.2"
react = "2025.10.1-19.2.0"
scafi = "1.6.0"
scala = "2.13.17"
scalacache = "0.28.0"

[libraries]
androidx-lifecycle-runtime-compose = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
antlr4 = { module = "org.antlr:antlr4", version.ref = "antlr4" }
antlr4-runtime = { module = "org.antlr:antlr4-runtime", version.ref = "antlr4" }
apache-commons-codec = "commons-codec:commons-codec:1.19.0"
apache-commons-collections4 = "org.apache.commons:commons-collections4:4.5.0"
apache-commons-io = "commons-io:commons-io:2.20.0"
apache-commons-lang3 = "org.apache.commons:commons-lang3:3.19.0"
apache-commons-math3 = "org.apache.commons:commons-math3:3.6.1"
apollo-runtime = { module = "com.apollographql.apollo3:apollo-runtime", version.ref = "apollo" }
appdirs = "net.harawata:appdirs:1.4.0"
arrow-core = { module = "io.arrow-kt:arrow-core", version.ref = "arrow" }
boilerplate = "org.danilopianini:boilerplate:0.2.2"
caffeine = "com.github.ben-manes.caffeine:caffeine:3.2.2"
classgraph = "io.github.classgraph:classgraph:4.8.181"
conrec = "org.danilopianini:conrec:0.1.1"
dokka-gradle-plugin = { module = "org.jetbrains.dokka:dokka-gradle-plugin", version.ref = "dokka" }
dyn4j = "org.dyn4j:dyn4j:5.0.2"
dsiutils = "it.unimi.dsi:dsiutils:2.7.4"
embedmongo = "de.flapdoodle.embed:de.flapdoodle.embed.mongo:4.21.0"
graphhopper-core = { module = "com.graphhopper:graphhopper-core", version.ref = "graphhopper" }
graphql-client = { module = "com.expediagroup:graphql-kotlin-client", version.ref = "graphql" }
graphql-hooks-provider = { module = "com.expediagroup:graphql-kotlin-hooks-provider", version.ref = "graphql" }
graphql-server = { module = "com.expediagroup:graphql-kotlin-server", version.ref = "graphql" }
graphql-server-ktor = { module = "com.expediagroup:graphql-kotlin-ktor-server", version.ref = "graphql" }
graphstream-algo = { module = "org.graphstream:gs-algo", version.ref = "graphstream" }
graphstream-core = { module = "org.graphstream:gs-core", version.ref = "graphstream" }
groovy-jsr223 = "org.codehaus.groovy:groovy-jsr223:3.0.25"
gson = "com.google.code.gson:gson:2.13.2"
gson-extras = "org.danilopianini:gson-extras:3.3.0"
guava = "com.google.guava:guava:33.5.0-jre"
javalib-java7 = "org.danilopianini:javalib-java7:0.6.1"
java-quality-assurance-plugin = "org.danilopianini.gradle-java-qa:org.danilopianini.gradle-java-qa.gradle.plugin:1.142.0"
jgit = "org.eclipse.jgit:org.eclipse.jgit:7.3.0.202506031305-r"
jgrapht-core = "org.jgrapht:jgrapht-core:1.5.2"
jirf = "org.danilopianini:jirf:0.4.36"
jool = "org.jooq:jool:0.9.15"
jpx = "io.jenetics:jpx:3.2.1"
jsr305 = "com.google.code.findbugs:jsr305:3.0.2"
junit-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }
junit-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }
junit-platform-engine = "org.junit.platform:junit-platform-engine:6.0.0"
junit-platform-launcher = "org.junit.platform:junit-platform-launcher:6.0.0"
kasechange = "net.pearx.kasechange:kasechange:1.4.1"
konf = { module = "com.uchuhimo:konf", version.ref = "konf" }
korim = "com.soywiz.korlibs.korim:korim:4.0.10"
kotest-plugin = { module = "io.kotest:io.kotest.gradle.plugin", version.ref = "kotest" }
kotest-assertions-core = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-assertions-table = { module = "io.kotest:kotest-assertions-table", version.ref = "kotest" }
kotest-framework-engine = { module = "io.kotest:kotest-framework-engine", version.ref = "kotest" }
kotest-runner = { module = "io.kotest:kotest-runner-junit5-jvm", version.ref = "kotest" }
kotlin-cli = "org.jetbrains.kotlinx:kotlinx-cli:0.3.6"
kotlin-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlin-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }
kotlin-jvm-plugin = { module = "org.jetbrains.kotlin.jvm:org.jetbrains.kotlin.jvm.gradle.plugin", version.ref = "kotlin" }
kotlin-multiplatform-plugin = { module = "org.jetbrains.kotlin.multiplatform:org.jetbrains.kotlin.multiplatform.gradle.plugin", version.ref = "kotlin" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-annotations = { module = "org.jetbrains.kotlin:kotlin-test-annotations-common", version.ref = "kotlin" }
kotlin-power-assert-plugin = { module = "org.jetbrains.kotlin.plugin.power-assert:org.jetbrains.kotlin.plugin.power-assert.gradle.plugin", version.ref = "kotlin" }
kotlin-quality-assurance-plugin = "org.danilopianini.gradle-kotlin-qa:org.danilopianini.gradle-kotlin-qa.gradle.plugin:0.95.1"
kotlin-react = { module = "org.jetbrains.kotlin-wrappers:kotlin-react", version.ref = "react" }
kotlin-react-dom = { module = "org.jetbrains.kotlin-wrappers:kotlin-react-dom", version.ref = "react" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlinx-atomicfu-runtime = { module = "org.jetbrains.kotlin:kotlinx-atomicfu-runtime", version.ref = "kotlin" }
kotlinx-serialization-json = "org.jetbrains.kotlinx:kotlinx-serialization-json:1.9.0"
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ksp-plugin = { module = "com.google.devtools.ksp:com.google.devtools.ksp.gradle.plugin", version = "2.2.20-2.0.4" }
ktor-client-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-serialization", version.ref = "ktor" }
ktor-serialization-jackson = { module = "io.ktor:ktor-serialization-jackson", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-server-compression = { module = "io.ktor:ktor-server-compression", version.ref = "ktor" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-cors = { module = "io.ktor:ktor-server-cors", version.ref = "ktor" }
ktor-server-cors-jvm = { module = "io.ktor:ktor-server-cors-jvm", version.ref = "ktor" }
ktor-server-core-jvm = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-server-test-host = { module = "io.ktor:ktor-server-test-host", version.ref = "ktor" }
ktor-server-websockets = { module = "io.ktor:ktor-server-websockets-jvm", version.ref = "ktor" }
listset = "org.danilopianini:listset:0.3.9"
logback = "ch.qos.logback:logback-classic:1.5.19"
mapsforge = "org.mapsforge:mapsforge-map-awt:0.25.0"
miglayout-swing = "com.miglayout:miglayout-swing:11.4.2"
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito" }
mockk = "io.mockk:mockk:1.14.6"
mongodb = "org.mongodb:mongodb-driver-sync:5.6.0"
oxygen-icons = "net.anwiba.commons.swing.icons:org.oxygen.oxygen-icons:4.13.0-1.2.50"
protelis-interpreter = { module = "org.protelis:protelis-interpreter", version.ref = "protelis" }
protelis-lang = { module = "org.protelis:protelis-lang", version.ref = "protelis" }
quadtree = "org.danilopianini:java-quadtree:1.0.2"
resourceloader = "org.danilopianini:thread-inheritable-resource-loader:0.3.8"
rtree = "com.github.davidmoten:rtree:0.12"
scafi-core = { module = "it.unibo.scafi:scafi-core_2.13", version.ref = "scafi" }
scala-compiler = { module = "org.scala-lang:scala-compiler", version.ref = "scala" }
scala-library = { module = "org.scala-lang:scala-library", version.ref = "scala" }
scalacache-core = { module = "com.github.cb372:scalacache-core_2.13", version.ref = "scalacache" }
scalacache-guava = { module = "com.github.cb372:scalacache-guava_2.13", version.ref = "scalacache" }
scalatest = "org.scalatest:scalatest_2.13:3.3.0-SNAP4"
scalatest-junit = "org.scalatestplus:junit-5-11_2.13:3.2.19.0"
simplelatlng = "com.javadocmd:simplelatlng:1.4.0"
slf4j = "org.slf4j:slf4j-api:2.0.17"
snakeyaml = "org.yaml:snakeyaml:2.5"
spotbugs-annotations = "com.github.spotbugs:spotbugs-annotations:4.9.6"
symmetric-matrix = "org.danilopianini:kotlin-symmetric-matrix:1.1.7"
redux-kotlin-threadsafe = "org.reduxkotlin:redux-kotlin-threadsafe:0.6.1"
svgsalamander = "guru.nidi.com.kitfox:svgSalamander:1.1.3"
trove4j = "net.sf.trove4j:trove4j:3.0.3"

[bundles]
graphhopper = [ "graphhopper-core" ]
graphql-server = [ "graphql-server", "graphql-server-ktor" ]
kotlin-react = [ "kotlin-react", "kotlin-react-dom" ]
ktor-client = [ "ktor-client-js", "ktor-client-content-negotiation", "ktor-serialization-kotlinx-json" ]
ktor-server = [
    "ktor-serialization",
    "ktor-serialization-jackson",
    "ktor-serialization-kotlinx-json",
    "ktor-server-compression",
    "ktor-server-content-negotiation",
    "ktor-server-cors",
    "ktor-server-core-jvm",
    "ktor-server-netty",
    "ktor-server-websockets"
]
protelis = [ "protelis-interpreter", "protelis-lang" ]
scala = [ "scala-compiler", "scala-library" ]
scalacache = [ "scalacache-core", "scalacache-guava" ]
scalatest = [ "scalatest", "scalatest-junit", "junit-platform-engine", "junit-platform-launcher" ]
testing-compile = [
    "junit-api",
    "kotest-assertions-core",
    "kotest-assertions-table",
    "kotest-runner",
    "kotlin-coroutines-test",
    "kotlin-test",
    "mockito-core",
    "mockk",
]
testing-runtimeOnly = [ "junit-engine" ]

[plugins]
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
compose-multiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
gitSemVer = "org.danilopianini.git-sensitive-semantic-versioning-gradle-plugin:7.0.4"
graphql-client = { id = "com.apollographql.apollo3", version.ref = "apollo" }
graphql-server = { id = "com.expediagroup.graphql", version.ref = "graphql" }
hugo = "io.github.fstaudt.hugo:0.10.0"
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
multiJvmTesting = "org.danilopianini.multi-jvm-test-plugin:4.2.0"
publishOnCentral = "org.danilopianini.publish-on-central:9.1.5"
scalafmt = "cz.augi.gradle.scalafmt:1.21.5"
shadowJar = "com.gradleup.shadow:9.2.2"
taskTree = "com.dorongold.task-tree:4.0.1"
jpackage = "org.panteleyev.jpackageplugin:1.7.6"
